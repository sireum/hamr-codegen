name: macOS

on:
  push:
  schedule:
    - cron: "0 2 * * 6" # every sunday at 2am
  workflow_dispatch:
    inputs:
      verbose:
        type: boolean
        description: Enable verbose testing output
        default: false

jobs:

  ci:
    runs-on: macOS-latest
    strategy:
      fail-fast: false
      matrix:
        testSuffix: ${{ fromJSON('["BaseBehaviorTestStatic,BaseBehaviorTestDynamic,CodeGenTest_Base","HamrTranspileTests,GumboTest,CodegenTest_CASE,MicrokitTests,Ros2Tests"]') }}
    name: '${{ matrix.testSuffix }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Retrieve versions.properties
        run: |
          curl -JLOs https://raw.githubusercontent.com/sireum/kekinian/master/versions.properties
      - name: Cache Java
        id: cache-java
        uses: actions/cache@v4
        with:
          path: bin/mac/java
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-java
      - name: Cache Scala
        id: cache-scala
        uses: actions/cache@v4
        with:
          path: bin/scala
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-scala
      - name: Cache Coursier
        id: cache-coursier
        uses: actions/cache@v4
        with:
          path: cache/coursier
          key: ${{ runner.os }}-${{ hashFiles('versions.properties') }}-coursier
      - name: Cache OSATE
        id: cache-osate
        uses: actions/cache@v4
        with:
          path: bin/mac/osate.app
          key: ${{ runner.os }}-${{ hashFiles('jvm/src/main/resources/phantom_versions.properties') }}-osate
      - name: Test
        env:
          # add verbose flag if workflow is restarted with "enable debug logging" checked or if requested
          # via workflow dispatch
          VERBOSE_DEBUG: ${{ ( runner.debug == '1' || inputs.verbose == '1' ) && ',verbose' || '' }}
        run: |
          export COURSIER_CACHE=$GITHUB_WORKSPACE/cache/coursier
          cd $GITHUB_WORKSPACE
          
          # see https://github.com/sireum/osate-plugin/blob/57785407d84793cf1f8d5926647e4dc75ab197a9/org.sireum.aadl.osate.cli/src/org/sireum/aadl/osate/cli/Phantom.java#L508-L517
          export CHECK_PHANTOM_HAMR_API_COMPATIBILITY=true
          
          export testmodes=phantom,sergen,slangcheck,tipe,ive,compile,generated_unit_tests,smt2${VERBOSE_DEBUG}
          echo "testmodes=${testmodes}"
          export SMT2_TIMEOUT=180000
          echo "SMT2_TIMEOUT=${SMT2_TIMEOUT}"
          export ALSO_TRANSPILE_VIA_CALLBACKS=true
          echo "ALSO_TRANSPILE_VIA_CALLBACKS=${ALSO_TRANSPILE_VIA_CALLBACKS}"
          
          bin/build.cmd test --suffixes ${{ matrix.testSuffix }}